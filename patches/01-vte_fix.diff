From 8477c313f7d4a2eeb5c30c52e2b710b08d52b35c Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Jir=CC=8Ci=CC=81=20Techet?= <techet@gmail.com>
Date: Wed, 11 Feb 2015 00:26:29 +0100
Subject: [PATCH] Fix VTE 0.28 on OS X

The vte_terminal_expose() implementation is strange. The expose
function should typically just draw (and this is what vte_terminal_draw(),
which performs something similar on GTK 3, does - and everything works
there). However, for some reason vte_terminal_expose() doesn't always
draw; sometimes it invalidates the visible area, which in turn causes
vte_terminal_expose() is called again and which invalidates the visible
area again... and we have a nice infinite cycle without any real draw.

It is a bit mysterious why this works on Linux and not on OS X - I assume
there is a different timing of events which might arrive in a different order
and cause this infinite cycle.

The second mysterious thing is why the invalidation code is actually there
- frankly, I don't know, maybe it's just some leftover from the past. After
removing the invalidation stuff and doing plain drawing (similarly to the
GTK 3 draw function), the terminal works again.
---
 src/vte.c | 30 +++---------------------------
 1 file changed, 3 insertions(+), 27 deletions(-)

diff --git a/src/vte.c b/src/vte.c
index 695d327..18484a5 100644
--- a/src/vte.c
+++ b/src/vte.c
@@ -11309,7 +11309,6 @@ vte_terminal_expose(GtkWidget *widget,
                     GdkEventExpose *event)
 {
 	VteTerminal *terminal = VTE_TERMINAL (widget);
-	GtkAllocation allocation;
 
 	/* Beware the out of order events -
 	 *   do not even think about skipping exposes! */
@@ -11317,32 +11316,9 @@ vte_terminal_expose(GtkWidget *widget,
 	_vte_debug_print (VTE_DEBUG_EVENTS, "Expose (%d,%d)x(%d,%d)\n",
 			event->area.x, event->area.y,
 			event->area.width, event->area.height);
-	if (terminal->pvt->active != NULL &&
-			update_timeout_tag != 0 &&
-			!in_update_timeout) {
-		/* fix up a race condition where we schedule a delayed update
-		 * after an 'immediate' invalidate all */
-		if (terminal->pvt->invalidated_all &&
-				terminal->pvt->update_regions == NULL) {
-			terminal->pvt->invalidated_all = FALSE;
-		}
-		/* if we expect to redraw the widget soon,
-		 * just add this event to the list */
-		if (!terminal->pvt->invalidated_all) {
-			gtk_widget_get_allocation (widget, &allocation);
-			if (event->area.width >= allocation.width &&
-			    event->area.height >= allocation.height) {
-				_vte_invalidate_all (terminal);
-			} else {
-				terminal->pvt->update_regions =
-					g_slist_prepend (terminal->pvt->update_regions,
-							gdk_region_copy (event->region));
-			}
-		}
-	} else {
-		vte_terminal_paint(widget, event->region);
-		terminal->pvt->invalidated_all = FALSE;
-	}
+	vte_terminal_paint(widget, event->region);
+	terminal->pvt->invalidated_all = FALSE;
+
 	return FALSE;
 }
 
-- 
2.2.1

